function rates()
%  Model with semi-continuous variables
%
%  Reads data from the file '../data/rates.dat'
%
%  Assume you run a power supply company.  You have several power
%  generators available, each of which has a minimum and maximum production
%  level and a cost per unit output.  The question is which generators to
%  use in order to minimize the overall operation cost while satisfying the
%  demand.

% ---------------------------------------------------------------------------
% File: rates.m
% Version 12.2
% ---------------------------------------------------------------------------
% Licensed Materials - Property of IBM
% 5725-A06 5725-A29 5724-Y48 5724-Y49 5724-Y54 5724-Y55
% Copyright IBM Corporation 2008, 2010. All Rights Reserved.
%
% US Government Users Restricted Rights - Use, duplication or
% disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
% ---------------------------------------------------------------------------

try
   % Read data
   [minArray, maxArray, cost, demand] = inputdata ('../../data/rates.dat');
   numGen   = size (minArray, 1);
   
   % Build model
   cplex = Cplex('rates');
   
   % The variables are the amount of power generated by each generator
   
   % The objective is to minimize the sum over all generators of the
   % cost per unit of power generated times the amount of power
   % generated
   % Each generator is allowed to be off and generate 0 power or
   % be on and generator between its minimum and maximum
   % amount.  This restriction is modeled by setting the generator
   % variable type to 'S' for semi-continuous and setting
   % the generator variable lower and upper bounds to the
   % minimum and maximum amounts.
   cplex.Model.sense = 'minimize';
   ctype = '';
   for i = 1:numGen
      ctype = strcat (ctype, 'S');
   end
   cplex.addCols(cost, [], minArray, maxArray, ctype);
   
   % Sum of generator output must be greater than demand
   cplex.addRows(demand, ones(1, numGen), Inf);
   
   cplex.solve();
   
   % Display solution
   fprintf ('\nTotal Cost of Generation: %.6f\n', cplex.Solution.objval);
   disp ('Power per Generator:');
   disp (cplex.Solution.x');
catch m
   throw (m);
end
end
