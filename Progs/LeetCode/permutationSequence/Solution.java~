public class Solution {
    public static void main(String[] args) {
	System.out.println(new Solution().getPermutation(3, 2));
    }
    
    public String getPermutation(int n, int k) {
        String str = getFirstString(n);
        
        int cnt = 1;
        while (cnt < k) {
            str = getNextString(str);
            cnt++;
        }
    }
    
    String getFirstString(int n) {  
        String result = new String();
        for (int i = 1; i <= n; i++) {
            result = result + Integer.toString(i);
        }
        
        return result;
    }
    
    String getNextString(String str, int n) {
        int idx = str.length() - 1;
        if (checkLast(str) == true) {
            return str;
        }
        do {
	    while (idx >= 0 && str.charAt(idx) - '0' == n) {
		idx--;
	    }
	    if (idx <= str.length() - 2) {
		str.setChar(str, idx, str.charAt(idx) + 1);
		for (int i = idx + 1; i <= str.length() - 1; i++) {
		    str = setChar(str, i, i - idx)
			}
	    }
        
        
        }
        while(checkUnique(str) == false);
    }
        
    if (result == Integer.MAX_VALUE + 1) {
        return Integer.MIN_VALUE;
    
    }
}